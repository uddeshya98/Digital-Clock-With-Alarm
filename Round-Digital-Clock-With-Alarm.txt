import tkinter as tk
from tkinter import messagebox
import time
import math

class DigitalClock:
    def __init__(self, root):
        self.root = root
        self.root.title("Round Digital Clock with Alarm")
        self.root.geometry("350x350")

        # Create a canvas for drawing the clock
        self.canvas = tk.Canvas(root, width=300, height=300, bg='white')
        self.canvas.pack(pady=20)

        # Create the alarm time entry
        self.alarm_time_label = tk.Label(root, text="Set Alarm (HH:MM):", font=('calibri', 12))
        self.alarm_time_label.pack()

        self.alarm_time_entry = tk.Entry(root, font=('calibri', 12))
        self.alarm_time_entry.pack()

        self.set_alarm_button = tk.Button(root, text="Set Alarm", command=self.set_alarm)
        self.set_alarm_button.pack()

        self.alarm_time = None
        self.update_clock()

    def update_clock(self):
        current_time = time.strftime('%H:%M:%S')  # 24-hour format
        self.canvas.delete('all')
        self.draw_clock(current_time)
        self.check_alarm(current_time)
        self.root.after(1000, self.update_clock)

    def draw_clock(self, time_str):
        # Draw the clock face
        self.canvas.create_oval(10, 10, 290, 290, outline='black', width=2)

        # Draw hour markers
        center_x = 150
        center_y = 150
        radius = 130

        # Draw numbers for hours
        for i in range(1, 13):
            angle = math.radians(i * 30 - 90)
            x = center_x + (radius - 20) * math.cos(angle)
            y = center_y + (radius - 20) * math.sin(angle)
            self.canvas.create_text(x, y, text=str(i), font=('calibri', 12, 'bold'), fill='black')

        # Draw the pins
        self.draw_pin(center_x, center_y, radius - 30, int(time_str[:2]), 'blue', 6)   # Hours
        self.draw_pin(center_x, center_y, radius - 20, int(time_str[3:5]), 'green', 4)  # Minutes
        self.draw_pin(center_x, center_y, radius - 10, int(time_str[6:]), 'red', 2)    # Seconds

        # Draw the time in 24-hour format
        self.canvas.create_text(center_x, center_y, text=time_str[:5], font=('calibri', 24, 'bold'))

        # Draw signature
        self.canvas.create_text(center_x, center_y + 90, text="Coder: Uddeshya", font=('calibri', 12, 'italic'))

    def draw_pin(self, center_x, center_y, length, value, color, width):
        # Calculate angle for the pin
        angle = (value % 60) * (360 / 60) - 90
        angle_rad = math.radians(angle)

        # Calculate pin end coordinates
        end_x = center_x + length * math.cos(angle_rad)
        end_y = center_y + length * math.sin(angle_rad)

        # Draw the pin
        self.canvas.create_line(center_x, center_y, end_x, end_y, fill=color, width=width)

    def set_alarm(self):
        alarm_time = self.alarm_time_entry.get().strip()
        if not self.validate_alarm_time(alarm_time):
            messagebox.showerror("Invalid Input", "Please enter a valid time in HH:MM format.")
        else:
            self.alarm_time = alarm_time
            messagebox.showinfo("Alarm Set", f"Alarm set for {self.alarm_time}")

    def validate_alarm_time(self, alarm_time):
        try:
            # Check if the time is in the format 'HH:MM'
            time.strptime(alarm_time, '%H:%M')
            return True
        except ValueError:
            return False

    def check_alarm(self, current_time):
        # Check if the current time matches the alarm time
        if self.alarm_time and current_time[:5] == self.alarm_time:
            messagebox.showinfo("Alarm", "It's time!")
            self.alarm_time = None  # Reset alarm after it goes off

if __name__ == "__main__":
    root = tk.Tk()
    clock = DigitalClock(root)
    root.mainloop()
